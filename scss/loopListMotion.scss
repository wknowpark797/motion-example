@import 'reset';

$initPos: 40%;
$width: 15vw;
$height: 40vh;
$length: 8;

main {
	width: 100%;
	height: 100vh;
	background: #111;
	position: relative;
	overflow: hidden;

	.list {
		li {
			width: $width;
			height: $height;
			position: absolute;
			top: 40%;
			left: $initPos;
			z-index: 3;
			padding: 20px;
			// cubic-bezier: 가속도 설정
			transition: 1s cubic-bezier(0.48, -0.33, 0.51, 1.02);

			.inner {
				width: 100%;
				height: 100%;
				background: #333;
				padding: 20px;
				border-radius: 15px;
				box-shadow: 10px 10px 20px rgba(0, 0, 0, 0.5);
				overflow: hidden;
				display: flex;
				align-items: center;
				transition: 1s;

				h2 {
					font: bold 20px/1;
					color: #888;
					letter-spacing: 1px;
					transition: 0.5s 0.5s;

					&::before {
						content: '';
						display: block;
						width: 20px;
						height: 3px;
						background: #888;
						margin-bottom: 10px;
						transition: 0.5s;
					}
				}
			}

			&:nth-of-type(1) {
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				padding: 0;
				opacity: 0;
				z-index: 1;
				transform: scale(2);
			}
			&:nth-of-type(2) {
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				padding: 0;
				z-index: 2;
				transform: scale(1);

				.inner {
					background: #222;
					box-shadow: none;
					border-radius: 0;
					padding: 5vw;

					h2 {
						font-size: 8vw;
						color: #fff;

						&::before {
							width: 6vw;
							height: 6px;
							background: #fff;
							margin-bottom: 20px;
						}
					}
				}
			}

			@for $i from 0 through 5 {
				&:nth-of-type(#{$i + 3}) {
					left: calc($initPos + $width * $i);
					transition-delay: 0.1s * $i;
				}
			}

			/*
			&:nth-of-type(3) {
				left: calc($initPos + $width * 0);
				transition-delay: 0s;
			}
			&:nth-of-type(4) {
				left: calc($initPos + $width * 1);
				transition-delay: 0.1s;
			}
			&:nth-of-type(5) {
				left: calc($initPos + $width * 2);
				transition-delay: 0.2s;
			}
			&:nth-of-type(6) {
				left: calc($initPos + $width * 3);
				transition-delay: 0.3s;
			}
			&:nth-of-type(7) {
				left: calc($initPos + $width * 4);
				transition-delay: 0.4s;
			}
			&:nth-of-type(8) {
				left: calc($initPos + $width * 5);
				transition-delay: 0.5s;
			}
      */
		}
	}

	.navi {
		position: absolute;
		top: calc(40% + $height + 20px);
		left: $initPos;
		z-index: 3;
		padding-left: 20px;

		.prev,
		.next {
			display: inline-block;
			width: 70px;
			height: 70px;
			border-radius: 50%;
			border: 1px solid #bbb;
			margin-right: 20px;
			position: relative;

			&::before,
			&::after {
				content: '';
				display: block;
				width: 17px;
				height: 1px;
				background: #fff;
				position: absolute;
				top: 50%;
			}

			&::before {
				transform: rotate(45deg) translateX(0);
			}
			&::after {
				transform: rotate(-45deg) translateX(0);
			}

			span {
				width: 20px;
				height: 1px;
				background: #fff;
				position: absolute;
				top: 50%;
				opacity: 1;
			}

			&.on {
				animation: wrap 0.3s 1;
			}
		}

		.prev {
			&::before,
			&::after {
				left: 25px;
				// transform: 블록요소에 적용 가능
				// transform-origin: 기준점 설정
				transform-origin: left center;
			}

			span {
				left: 25px;
			}

			&.on {
				span {
					animation: prevArrow 0.5s 1;
				}
			}
		}

		.next {
			&::before,
			&::after {
				right: 25px;
				transform-origin: right center;
			}

			span {
				right: 25px;
			}

			&.on {
				span {
					animation: nextArrow 0.5s 1;
				}
			}
		}
	}
}

@keyframes wrap {
	0% {
		transform: scale(1);
		border: 1px solid rgba(255, 255, 255, 1);
	}
	70% {
		transform: scale(2);
		border: 1px solid rgba(255, 255, 255, 0);
	}
	100% {
		transform: scale(1);
		border: 1px solid rgba(255, 255, 255, 1);
	}
}

@keyframes prevArrow {
	0% {
		left: 25px;
		width: 20px;
		opacity: 1;
	}
	70% {
		left: -30px;
		width: 50px;
		opacity: 0;
	}
	71% {
		left: 100px;
		width: 120px;
		opacity: 0;
	}
	100% {
		left: 25px;
		width: 20px;
		opacity: 1;
	}
}

@keyframes nextArrow {
	0% {
		right: 25px;
		width: 20px;
		opacity: 1;
	}
	70% {
		right: -30px;
		width: 50px;
		opacity: 0;
	}
	71% {
		right: 100px;
		width: 120px;
		opacity: 0;
	}
	100% {
		right: 25px;
		width: 20px;
		opacity: 1;
	}
}

@media screen and (max-width: 979px) {
	// 변수가 적용되는 코드값이 함께 미디어쿼리에 활용 되어야 함
	$initPos: 45%;
	$width: 30vw;

	main {
		.list {
			li {
				width: $width;
				left: $initPos;

				@for $i from 0 through 5 {
					&:nth-of-type(#{$i + 3}) {
						left: calc($initPos + $width * $i);
						transition-delay: 0.1s * $i;
					}
				}
			}
		}
	}
}

@media screen and (max-width: 539px) {
	$initPos: 20%;
	$width: 50vw;

	main {
		.list {
			li {
				width: $width;
				height: 160px;
				top: 60%;
				left: $initPos;

				@for $i from 0 through 5 {
					&:nth-of-type(#{$i + 3}) {
						left: calc($initPos + $width * $i);
						transition-delay: 0.1s * $i;
					}
				}
			}
		}
	}
}
